{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","href","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qLAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAU,IAFA,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAoB9C,OACI,sBAAMC,SAbW,SAAEC,GACrBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE7BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAe,MAOf,SACE,uBACEO,KAAK,OACLC,MAAQT,EACRU,SArBkB,SAAEP,GAC1BF,EAAeE,EAAEQ,OAAOF,a,+BCRjBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAIAI,MAAOF,GAJP,cAIbG,EAJa,gBAMIA,EAAKC,OANT,uBAMXC,EANW,EAMXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZvB,kBAgBZM,GAhBY,4CAAH,sDCEPO,EAAc,SAAC,GAAwB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEtC,OACI,qBAAKc,UAAU,yCAAf,SACI,oBAAGlB,OAAO,MAAMmB,KAAOf,EAAvB,UACI,qBAAKgB,IAAMhB,EAAMiB,IAAMP,IACvB,4BAAKA,UCHRQ,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAM,GACNc,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAmBxC,OAZAC,qBAAW,WAEPzB,EAASC,GACJyB,MAAM,SAAAC,GACHH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAItB,CAACrB,IAEGsB,EDf0BK,CAAc3B,GAAlCa,EAFwB,EAE7BN,KAAac,EAFgB,EAEhBA,QAErB,OACI,qCACI,mCAAOrB,EAAP,OACEqB,GAAW,mBAAGL,UAAU,oCAAb,0BACb,qBAAKA,UAAU,YAAf,SAGYH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIC,aEd7BiB,EAAS,WAAO,IAAD,EAEY1C,mBAAS,CAAC,aAFtB,mBAEjB2C,EAFiB,KAEL5C,EAFK,KAQxB,OACI,qCACI,yCACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ4C,EAAWpB,KAAK,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEGA,SAAWA,GADLA,Y,MCflC8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8d6ec098.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState( '' )\r\n\r\n    const handleInputChange = ( e ) => {\r\n      setInputValue( e.target.value )\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n      e.preventDefault();\r\n\r\n      if( inputValue.trim().length > 2 ){\r\n\r\n        setCategories( cats => [inputValue, ...cats] )\r\n        setInputValue( '' )\r\n\r\n      }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit } >\r\n          <input \r\n            type=\"text\"\r\n            value={ inputValue }\r\n            onChange={ handleInputChange }\r\n          />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n}\r\n","export const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=ebUUE5YsxE9tIuCVLJ1xt2KBfTBcX9NX`;\r\n\r\n    const resp = await fetch( url );\r\n\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url} ) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated  animate__pulse\">\r\n            <a target=\"new\" href={ url } >\r\n                <img src={ url } alt={ title } />\r\n                <p>{ title }</p>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nimport { GifGridItem } from './GifGridItem';  \r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category  );      \r\n\r\n    return (\r\n        <>\r\n            <h3> { category } </h3>\r\n            { loading && <p className=\"animate__animated  animate__flash\">Cargando... </p> }\r\n            <div className=\"card-grid\">\r\n\r\n                    {\r\n                        images.map( img => (\r\n                            <GifGridItem \r\n                                key={ img.id }\r\n                                { ...img }\r\n                            />\r\n                        ))\r\n                    }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n\r\n    }, [category])\r\n\r\n    return state; \r\n\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Yakuza 0']);\r\n\r\n    /* const handleAdd = () => {\r\n        setCategories( ['Worms', ...categories] );\r\n    } */\r\n\r\n    return (\r\n        <>\r\n            <h2>Gif App</h2>  \r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n\r\n            <ul>\r\n                {\r\n                    categories.map( category => (\r\n                         <GifGrid \r\n                            key={ category } \r\n                            category={ category } \r\n                         />\r\n                    ))\r\n                }\r\n            </ul>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifApp } from './GifApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}